/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import <Cocoa/Cocoa.h>
#import "TDesktopLayerDelegate-Protocol.h"
#import "TDesktopLayer.h"
@class NSImage, TDesktopIconSelectionLayer, TDesktopLayer;

@interface TDesktopIcon : NSObject <TDesktopLayerDelegate>
{
    BOOL _visible;
    struct CGPoint _anchorPoint;
    int _iconSize;
    struct TFENode _node;
    BOOL _selected;
    BOOL _springBlinkOff;
    BOOL _opened;
    BOOL _iconIsVisible;
    BOOL _labelIsVisible;
    BOOL _labelIsTruncated;
    //struct TNSRef<NSImage *> _thumbnailImage;
    BOOL _thumbnailIsDirty;
    TDesktopLayer *_icon;
    TDesktopLayer *_label;
    TDesktopIconSelectionLayer *_selection;
}

@property(nonatomic) BOOL thumbnailIsDirty; // @synthesize thumbnailIsDirty=_thumbnailIsDirty;
@property(readonly, nonatomic) BOOL labelIsTruncated; // @synthesize labelIsTruncated=_labelIsTruncated;
@property(nonatomic) BOOL labelIsVisible; // @synthesize labelIsVisible=_labelIsVisible;
@property(nonatomic) BOOL iconIsVisible; // @synthesize iconIsVisible=_iconIsVisible;
@property(nonatomic) BOOL opened; // @synthesize opened=_opened;
@property(nonatomic) BOOL springBlinkOff; // @synthesize springBlinkOff=_springBlinkOff;
@property(nonatomic) BOOL selected; // @synthesize selected=_selected;
@property(nonatomic) int iconSize; // @synthesize iconSize=_iconSize;
@property(nonatomic) struct CGPoint anchorPoint; // @synthesize anchorPoint=_anchorPoint;
@property(nonatomic) BOOL visible; // @synthesize visible=_visible;
//- (id).cxx_construct;
//- (void).cxx_destruct;
- (struct TFENode)node;

// No es el icono real, es el icono con la vista previa del archivo, es decir, si tenemos una imagen no es el icono de la imagen, si no la miniatura de la imagen
@property(retain, nonatomic) NSImage *thumbnailImage; // @dynamic thumbnailImage;

- (void)updateLayout;
- (void)setNeedsDisplay;
- (void)drawLayer:(id)arg1 inContext:(struct CGContext *)arg2;
- (void)drawInContext:(struct CGContext *)arg1 forDrag:(BOOL)arg2;
- (void)drawSelectionInContext:(struct CGContext *)arg1;
- (void)drawExtraInfoInContext:(struct CGContext *)arg1;
- (void)drawLabelInContext:(struct CGContext *)arg1 forDrag:(BOOL)arg2;
- (void)drawLabelBackground:(struct CGContext *)arg1 forDrag:(BOOL)arg2;
//- (void)drawMultiLineLabelBackground:(struct CGContext *)arg1 bounds:(const struct CGRect *)arg2 rects:(struct CGRect [2])arg3 lineCount:(unsigned int)arg4 horizontalMargin:(double)arg5 flushLeft:(BOOL)arg6 scaleFactor:(double)arg7 hiliteColor:(const struct TColor *)arg8 selected:(BOOL)arg9 labelIndex:(int)arg10;
//- (void)drawSingleLineLabelBackground:(struct CGContext *)arg1 bounds:(const struct CGRect *)arg2 horizontalMargin:(double)arg3 scaleFactor:(double)arg4 hiliteColor:(const struct TColor *)arg5 selected:(BOOL)arg6 labelIndex:(int)arg7;
- (void)drawIconInContext:(struct CGContext *)arg1;
- (void)invalidateLabels;
- (void)setCGScaleFactor:(double)arg1;
- (void)setContentsScale:(double)arg1 forLayer:(id)arg2;
- (_Bool)selectionRectIsVisible;
- (void)orderFront;
- (void)hide;
- (void)show;
- (void)dealloc;
- (id)initWithNode:(const struct TFENode *)arg1;

@end

